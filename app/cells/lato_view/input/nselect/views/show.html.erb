<div class="form-control input-nselect <% @width %>">
	<% @select_inputs.each_with_index do |select_input, index| %>

	<div class="form-control <%= get_select_width(select_input) %>"
		data-api-url="<%= select_input[:api_url] %>" data-value-field="<%= select_input[:value_field] %>"
		data-label-field="<%= select_input[:label_field] %>" data-value-id="<%= index %>">

		<label class="form-label"><%= select_input[:label] %></label>
		<input class="select-nselect" type="text" name="<%= select_input[:name] %>"
		value="<%= select_input[:value] %>">

	</div>

	<% end %>
</div>


<script>

	// TODO: Port it on separated js
	setTimeout(function () {
		var inputNSelects = $('.input-nselect')
		inputNSelects.each(function (index, inputNSelect) {
			manageInputNSelect(inputNSelect)
		})
	}, 1000)

	// Main function for each cell
	var manageInputNSelect = function(inputNSelect) {
		var selectInputs = $(inputNSelect).find('.form-control')

		// init selectize
		selectInputs.each(function(index) {
			initSelectize(index, selectInputs)
		})

		// load options for first selectize
		loadOptions(null, 0, selectInputs)
	}

	// Function to init a select with the call of the api
	var loadOptions = function (filterId, selectInputPosition, selectInputs) {
		var selectInput = selectInputs[selectInputPosition]
		if (!selectInput) { return }
		var apiUrl = $(selectInput).attr('data-api-url')
		$.ajax({
			url: apiUrl,
			cache: false,
			data: (filterId ? {filter_id: filterId} : null),
			success: function (response) {
				updateSelectize(response, selectInputPosition, selectInputs)
			}
		})
	}

	// Function to init an empty input to become a selectize
	var initSelectize = function (selectInputPosition, selectInputs) {
		var selectInput = selectInputs[selectInputPosition]
		var input = $(selectInput).find('.select-nselect')
		var valueField = $(selectInput).attr('data-value-field')
		var labelField = $(selectInput).attr('data-label-field')
		var initialVal = $(input).val()
		var id = $(selectInput).attr('data-value-id')

		input.selectize({
			maxItems: 1,
			valueField: valueField,
			labelField: labelField,
			searchField: labelField,
			options: [],
			onChange: function (value) {
				loadOptions(value, parseInt(id) + 1, selectInputs)
			},
			onInitialize: function() {
				if (initialVal) {
					this.setValue(initialVal)
					loadOptions(initialVal, parseInt(id) + 1, selectInputs)
				}
			}
		})
	}

	// Function to update a selectize with correct options
	var updateSelectize = function (options, selectInputPosition, selectInputs) {
		var selectInput = selectInputs[selectInputPosition]
		var input = $(selectInput).find('.select-nselect')
		var id = $(selectInput).attr('data-value-id')
		var initialVal = $(input).val()

		var selectize = $(input)[0].selectize

		if (selectize) {
			selectize.clear()
			selectize.clearOptions()
			selectize.load(function(callback) {
			    callback(options)
			})
			if (initialVal) {
				selectize.setValue(initialVal)
				loadOptions(initialVal, parseInt(id) + 1, selectInputs)
			}
		}
	}
</script>
